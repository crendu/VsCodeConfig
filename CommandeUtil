#JAVA
-->Remove all except ponctuation or alpha-numerical character
	this.string.replaceAll("[^\\p{Punct}\\w]","");


#VSCODE
	- Remove duplicate lines : Alt+R [SEARCH] ^(.*)(\n\1)+$ [REPLACE] $1
	- Remove last character : Alt+R [SEARCH] .{1}$


#SED
	sed -i '/mot1/{/mot2/d}' filename
  

#GIT
--> Fix an hold commit
	git add <my fixed files>
	git commit --fixup=OLDCOMMITNUMBER
	git rebase --interactive --autosquash OLDCOMMITNUMBER^

--> Squash le last two commit of a branch
	git rebase -i HEAD~2

--> REBASE 1/1
	git rebase --continue

--> Rename Last Commit
	git commit --amend

--> difference between two commit
	git diff --name-only feature/CRQ000000020669_SecurisationSubstrat $(git merge-base feature/CRQ000000020669_SecurisationSubstrat develop/MES7.8.0)
	==> commit sur la branch depuis sa crÃ©ation
		git diff --name-only $(git merge-base --fork-point origin)
	==> commit sur la branch depuis le dernier tag
		git diff --name-only $(git describe --tags --abbrev=0)

--> all trace on branch where author is or not renduc
	git log --pretty="(%cn) %s" --author='^(?!renduc).*$' --perl-regexp MES-7.7.2.0003..HEAD
	git log --pretty="(%cn) %s" --author='^(renduc).*$' --perl-regexp MES-7.8.2.0002..HEAD

--> all trace on branch whose not containing the word build, merge or packaging
	git log --pretty=%s --invert-grep --grep='build\|branch' -i origin..HEAD
	git log --pretty=%s --invert-grep --grep='build\|branch' -i $(git describe --tags --abbrev=0)..HEAD
	git log --pretty=%s origin/develop/MES7.12.0 --no-merges

--> Compare two commit
	git show 1b3b7d4 > old.txt
	git diff 98b6806 98b6806^1 > new.txt
